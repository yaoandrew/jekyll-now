I"˜<p><img src="/images/commandline.png" alt="Command Line Screen image" /></p>

<p>In the O‚ÄôReilly book <em>97 Things Every Programmer Should Know</em>, there‚Äôs an entry that caught my attention by Carroll Robinson. His ‚Äòthing‚Äô that we should know is how to use command line tools. My own history in technology has set me up well for this. In the late 90s, while at my first job, we ran Solaris/UNIX machines on the desktop. It was the first time I was exposed to the command line and I had a boss that loved to write shell scripts and use UNIX commands for basic tasks that Windows users had GUI based applications for. One example that comes to mind is our contact database which was simply a flat file that we would grep to search for a contact.</p>

<p>There were times when I needed to find out the number of users at a particular client and I could simply chain together a few commands:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">grep</span> <span class="n">clientname</span> <span class="o">|</span> <span class="n">wc</span> <span class="o">-</span><span class="n">l</span></code></pre></figure>

<p>I worked with one person who‚Äôs job was to extract some reporting from our systems and he seemed to do his entire job with shell scripts, <code class="highlighter-rouge">sed</code>, and <code class="highlighter-rouge">awk</code>.</p>

<p>In Robinson‚Äôs post, his point is related to another ‚Äòthing‚Äô programmers should know or do by Alan Griffiths called Don‚Äôt Rely on ‚ÄúMagic Happens Here‚Äù. The common themes across both articles are to understand what is going on under the hood and not think anything happens automagically. Robinson talks about it in the context of an IDE and refers to Visual Studio or Eclipse while suggesting that programmers understand what happens when you click a button in the IDE and the tool magically creates an executable file in your project folder. In more modern development tools like VS Code, there‚Äôs even a terminal window to run terminal commands.</p>

<p>Robinson‚Äôs point is, get your head out of the IDE and learn some command line tools. He suggests that the IDE is just a graphical interface to the command line for developement and there‚Äôs a lot of power and experience to be gained from using the command line.</p>

<p>I happen to use vim for most of my development. A key part to working efficiently in vim is understanding how to find all references of a class across files on the file system. I could certainly use a refresher on all the command line arguments available for <code class="highlighter-rouge">grep</code> and <code class="highlighter-rouge">find</code>. I agree with Robinson on learning the command line and have seen patterns from UNIX help me understand other concepts in programming. While I don‚Äôt need to control my soundcloud playlist from the command line like the image in this post suggests, there are a lot of fun, retro things you can do with it.</p>

<p>I‚Äôll leave you with the following example command to play with on you command line:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">curl</span> <span class="n">wttr</span><span class="p">.</span><span class="nf">in</span><span class="o">/~</span><span class="n">newyork</span>
<span class="n">curl</span> <span class="n">wttr</span><span class="p">.</span><span class="nf">in</span><span class="o">/</span><span class="n">santa</span><span class="o">-</span><span class="n">monica</span></code></pre></figure>

:ET